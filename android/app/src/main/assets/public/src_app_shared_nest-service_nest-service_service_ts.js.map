{"version":3,"file":"src_app_shared_nest-service_nest-service_service_ts.js","mappings":"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","sources":["./src/app/shared/message-service/message-service.service.ts","./src/app/shared/nest-service/nest-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MessageService {\n  messages: string[] = [];\n\n  add(message: string) {\n    this.messages.push(message);\n  }\n\n  clear() {\n    this.messages = [];\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable, of } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\n\nimport { Hero } from '../hero';\nimport { MessageService } from '../message-service/message-service.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NestService {\n  readonly url: string = 'http://localhost:3000';\n\n  constructor(\n    private http: HttpClient,\n    private messageService: MessageService\n  ) {}\n\n  getHeroes(): Observable<Hero[]> {\n    return this.http.get<Hero[]>(`${this.url}/heroes`).pipe(\n      tap(() => this.log('fetched heroes')),\n      catchError(this.handleError<Hero[]>('getHeroes', []))\n    );\n  }\n\n  getHeroById(heroId: number): Observable<Hero> {\n    return this.http.get<Hero>(`${this.url}/heroes/${heroId}`).pipe(\n      tap(() => this.log(`fetched hero id=${heroId}`)),\n      catchError(this.handleError<Hero>(`getHero id=${heroId}`))\n    );\n  }\n\n  addHero(heroName: string): Observable<Hero> {\n    const newHero = { name: heroName };\n    return this.http.post<Hero>(`${this.url}/heroes/`, newHero).pipe(\n      tap(() => this.log(`added hero =${heroName}`)),\n      catchError(this.handleError<Hero>('addHero'))\n    );\n  }\n\n  deleteHero(hero: Hero): Observable<Hero> {\n    return this.http.delete<Hero>(`${this.url}/heroes/${hero.id}`).pipe(\n      tap(() => this.log(`deleted hero id=${hero.id}`)),\n      catchError(this.handleError<Hero>('deleteHero'))\n    );\n  }\n\n  updateHero(hero: Hero): Observable<Hero> {\n    return this.http.put<Hero>(`${this.url}/heroes`, hero).pipe(\n      tap(() => this.log(`updated hero id=${hero.id}`)),\n      catchError(this.handleError<Hero>('updateHero'))\n    );\n  }\n\n  searchHeroes(heroName: string): Observable<Hero[]> {\n    if (!heroName.trim()) {\n      return of([]);\n    }\n    return this.http.get<Hero[]>(`${this.url}/heroes?name=${heroName}`).pipe(\n      tap((x) =>\n        x.length\n          ? this.log(`found heroes matching \"${heroName}\"`)\n          : this.log(`no heroes matching \"${heroName}\"`)\n      ),\n      catchError(this.handleError<Hero[]>('searchHeroes', []))\n    );\n  }\n\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  private log(message: string) {\n    this.messageService.add(`HeroService: ${message}`);\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}